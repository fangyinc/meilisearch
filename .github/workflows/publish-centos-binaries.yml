name: Build CentOS 7.9 binary

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to build (e.g., v1.11.3)'
        required: false
        type: string
  push:
    tags:
      - 'v*'

jobs:
  build-centos7:
    name: Build binary for CentOS 7.9
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.version || github.ref }}
        fetch-depth: 0
        fetch-tags: true
    
    - name: Build in CentOS 7 Docker
      run: |
        # 创建构建脚本
        cat > build.sh << 'EOL'
        #!/bin/bash
        set -ex

        # 备份原有的 repo 文件
        mkdir -p /etc/yum.repos.d/backup
        mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/backup/

        # 配置阿里云源
        curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
        curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo

        # 配置 SCL 源
        cat > /etc/yum.repos.d/CentOS-SCLo-scl.repo << 'EOF'
        [centos-sclo-sclo]
        name=CentOS-7 - SCLo sclo
        baseurl=http://mirrors.aliyun.com/centos/7/sclo/$basearch/sclo/
        gpgcheck=0
        enabled=1

        [centos-sclo-rh]
        name=CentOS-7 - SCLo rh
        baseurl=http://mirrors.aliyun.com/centos/7/sclo/$basearch/rh/
        gpgcheck=0
        enabled=1
        EOF

        # 清理并更新 yum 缓存
        yum clean all
        rm -rf /var/cache/yum
        yum makecache

        # 安装构建所需工具
        yum install -y which make gcc gcc-c++ wget
        yum install -y devtoolset-9

        # 安装 Rust
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.79.0
        source $HOME/.cargo/env

        # 启用 devtoolset-9 获取较新的编译器
        source /opt/rh/devtoolset-9/enable

        # 构建
        cd /work
        cargo build --release --locked --target x86_64-unknown-linux-gnu

        # 确保构建产物属于 runner 用户
        chown -R 1001:1001 target/
        EOL

        # 设置脚本权限
        chmod +x build.sh

        # 在 CentOS 7 容器中运行构建
        docker run --rm \
          -v $(pwd):/work \
          -w /work \
          quay.io/centos/centos:7 \
          ./build.sh

    - name: Check binary compatibility
      run: |
        echo "Checking glibc requirements:"
        ldd target/x86_64-unknown-linux-gnu/release/meilisearch || true
        echo "Checking symbol versions:"
        readelf -V target/x86_64-unknown-linux-gnu/release/meilisearch || true
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: meilisearch-linux-centos7-amd64
        path: target/x86_64-unknown-linux-gnu/release/meilisearch
        if-no-files-found: error