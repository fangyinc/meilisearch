name: Build CentOS 7.9 binary

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag to build (e.g., v1.11.3)'
        required: false
        type: string
  push:
    tags:
      - 'v*'

jobs:
  build-centos7:
    name: Build binary for CentOS 7.9
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.inputs.version || github.ref }}
        fetch-depth: 0
        fetch-tags: true
    
    - name: Build in CentOS 7 Docker
      run: |
        # 创建构建脚本
        cat > build.sh << 'EOL'
        #!/bin/bash
        set -e

        # 配置基础仓库
        cat > /etc/yum.repos.d/CentOS-Base.repo << 'EOF'
        [base]
        name=CentOS-$releasever - Base
        baseurl=https://vault.centos.org/7.9.2009/os/$basearch/
        gpgcheck=1
        gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
        
        [updates]
        name=CentOS-$releasever - Updates
        baseurl=https://vault.centos.org/7.9.2009/updates/$basearch/
        gpgcheck=1
        gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
        
        [extras]
        name=CentOS-$releasever - Extras
        baseurl=https://vault.centos.org/7.9.2009/extras/$basearch/
        gpgcheck=1
        gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
        EOF

        # 配置 SCL 仓库
        cat > /etc/yum.repos.d/CentOS-SCLo-scl.repo << 'EOF'
        [centos-sclo-sclo]
        name=CentOS-7 - SCLo sclo
        baseurl=https://vault.centos.org/7.9.2009/sclo/$basearch/sclo/
        gpgcheck=1
        enabled=1
        gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-SCLo

        [centos-sclo-rh]
        name=CentOS-7 - SCLo rh
        baseurl=https://vault.centos.org/7.9.2009/sclo/$basearch/rh/
        gpgcheck=1
        enabled=1
        gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-SIG-SCLo
        EOF

        # 清理并更新 yum 缓存
        yum clean all
        yum makecache fast

        # 安装构建所需工具
        yum group install -y "Development Tools"
        yum install -y curl centos-release-scl
        yum install -y devtoolset-9

        # 安装 Rust
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.79.0
        source $HOME/.cargo/env

        # 启用 devtoolset-9 获取较新的编译器
        source /opt/rh/devtoolset-9/enable

        # 构建
        cd /work
        cargo build --release --locked --target x86_64-unknown-linux-gnu

        # 确保构建产物属于 runner 用户
        chown -R 1001:1001 target/
        EOL

        # 设置脚本权限
        chmod +x build.sh

        # 在 CentOS 7 容器中运行构建
        docker run --rm \
          -v $(pwd):/work \
          -w /work \
          quay.io/centos/centos:7 \
          ./build.sh

    - name: Check binary compatibility
      run: |
        echo "Checking glibc requirements:"
        ldd target/x86_64-unknown-linux-gnu/release/meilisearch || true
        echo "Checking symbol versions:"
        readelf -V target/x86_64-unknown-linux-gnu/release/meilisearch || true
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: meilisearch-linux-centos7-amd64
        path: target/x86_64-unknown-linux-gnu/release/meilisearch
        if-no-files-found: error